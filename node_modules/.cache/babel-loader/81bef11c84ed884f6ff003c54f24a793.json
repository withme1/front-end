{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/chat/ChatMapInfo.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport Modal from 'react-modal/lib/components/Modal';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst mapButtonSytle = {\n  color: 'white',\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#2BAE66\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\"\n  }\n};\n\nfunction ChatMapInfo(_ref) {\n  _s();\n\n  let {\n    room\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const mapRef = useRef(null);\n\n  const waitModalRender = cb => {\n    if (mapRef.current === null) setTimeout(() => waitModalRender(cb), 0);else cb();\n  };\n\n  const clickHandler = e => {\n    setOpen(true);\n    c;\n    waitModalRender(() => {\n      const startLoc = room.startLoc;\n      const endLoc = room.endLoc;\n      const middleLoc = getMiddleLoc(startLoc, endLoc);\n      const options = {\n        //지도를 생성할 때 필요한 기본 옵션\n        center: new kakao.maps.LatLng(loc.latitude, loc.longitude),\n        //지도의 중심좌표.\n        level: 3 //지도의 레벨(확대, 축소 정도)\n\n      };\n      const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n      //마커 생성\n\n      const marker = new kakao.maps.Marker({\n        position: new kakao.maps.LatLng(loc.latitude, loc.longitude)\n      });\n      marker.setMap(map);\n      const customOverlay = new kakao.maps.CustomOverlay({\n        map: map,\n        position: new kakao.maps.LatLng(loc.latitude, loc.longitude),\n        content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">${text}</div>`\n      });\n    });\n  };\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Button, {\n      sx: mapButtonSytle,\n      onClick: clickHandler,\n      children: \"\\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), _jsxDEV(Modal, {\n      isOpen: open,\n      onRequestClose: () => setOpen(false),\n      ariaHideApp: false,\n      children: _jsxDEV(\"div\", {\n        ref: mapRef,\n        css: css`height: 100%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatMapInfo, \"5drilctw5vHsTqFtARh01N6lBc8=\");\n\n_c = ChatMapInfo;\nexport default ChatMapInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMapInfo\");","map":{"version":3,"names":["css","Button","useEffect","useRef","useState","Modal","mapButtonSytle","color","boxShadow","backgroundColor","padding","fontSize","width","minWidth","ChatMapInfo","room","open","setOpen","mapRef","waitModalRender","cb","current","setTimeout","clickHandler","e","c","startLoc","endLoc","middleLoc","getMiddleLoc","options","center","kakao","maps","LatLng","loc","latitude","longitude","level","map","Map","marker","Marker","position","setMap","customOverlay","CustomOverlay","content","text"],"sources":["/var/www/front-end/src/main/chat/ChatMapInfo.js"],"sourcesContent":["/*global kakao*/\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst mapButtonSytle = {\n    color: 'white',\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\",\n    padding: \"0px\",\n    fontSize: '0.8em',\n    width: '55px',\n    minWidth: '55px',\n\n    \"&:hover\": {\n        boxShadow: \"0 0 0\",\n        backgroundColor: \"#2BAE66\"\n    }\n};\n\nfunction ChatMapInfo({ room }) {\n    const [open, setOpen] = useState(false);\n    const mapRef = useRef(null);\n\n    const waitModalRender = (cb) => {\n        if (mapRef.current === null)\n            setTimeout(() => waitModalRender(cb), 0);\n        else\n            cb();\n    }\n\n    const clickHandler = (e) => {\n        setOpen(true);\n        c\n        waitModalRender(() => {\n            const startLoc = room.startLoc;\n            const endLoc = room.endLoc;\n            const middleLoc = getMiddleLoc(startLoc, endLoc)\n            const options = { //지도를 생성할 때 필요한 기본 옵션\n                center: new kakao.maps.LatLng(loc.latitude, loc.longitude), //지도의 중심좌표.\n                level: 3 //지도의 레벨(확대, 축소 정도)\n            };\n\n            const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n\n            //마커 생성\n            const marker = new kakao.maps.Marker({\n                position: new kakao.maps.LatLng(loc.latitude, loc.longitude)\n            });\n            marker.setMap(map);\n\n            const customOverlay = new kakao.maps.CustomOverlay({\n                map: map,\n                position: new kakao.maps.LatLng(loc.latitude, loc.longitude),\n                content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">${text}</div>`,\n            });\n        })\n    }\n\n    return (\n        <>\n            <Button sx={mapButtonSytle} onClick={clickHandler}>위치</Button>\n            <Modal\n                isOpen={open}\n                onRequestClose={() => setOpen(false)}\n                ariaHideApp={false}\n            >\n                <div ref={mapRef} css={css`height: 100%`}></div>\n            </Modal>\n        </>\n    )\n}\n\nexport default ChatMapInfo"],"mappings":"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"},"metadata":{},"sourceType":"module"}