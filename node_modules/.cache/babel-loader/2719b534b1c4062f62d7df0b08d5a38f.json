{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/chat/Chat.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, TextField } from '@mui/material';\nimport ChatView from './ChatView';\nimport { getSocket } from '../../socket/socket';\nimport { useEffect, useRef, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst chatStyle = css`\n  height: calc(100% - 8px);\n  margin: 3px;\n\n  display: flex;\n  flex-direction: column;\n`;\nconst textFieldStyle = {\n  flexGrow: '1',\n  '.MuiOutlinedInput-root input': {\n    padding: \"5px;\",\n    fontSize: '0.8em',\n    height: '20px'\n  },\n  '.MuiOutlinedInput-root fieldset': {\n    borderColor: 'green'\n  },\n  '.MuiOutlinedInput-root.Mui-focused fieldset': {\n    borderColor: 'green'\n  }\n};\nconst sendButtonStyle = {\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#2BAE66\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\"\n  }\n};\nconst leaveButtonStyle = {\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#ff5b5b\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#ff5b5b\"\n  }\n};\n\nconst checkMessage = m => {\n  if (m === '') return false;\n  return true;\n};\n\nfunction Chat(_ref) {\n  _s();\n\n  let {\n    remake,\n    setRemake,\n    isInRoom,\n    setIsInRoom,\n    isHost,\n    setIsHost,\n    roomId,\n    setRoomId,\n    chatList,\n    setChatList,\n    addMessage,\n    setRoomList,\n    chatStyleRef\n  } = _ref;\n  const [message, setMessage] = useState('');\n\n  const chatHandler = e => {\n    e.preventDefault();\n    if (!isInRoom) return;\n    if (checkMessage(message)) getSocket().emit('sendMessageReq', {\n      message: message,\n      time: dayjs().format('HH:mm:ss')\n    });\n  };\n\n  const leaveHandler = e => {\n    if (!isInRoom) return;\n    if (isHost) getSocket().emit('deleteRoomReq');else getSocket().emit('quitRoomReq');\n  };\n\n  useEffect(() => {\n    getSocket().removeAllListeners(\"sendMessageRes\");\n    getSocket().on('sendMessageRes', res => {\n      if (res.ok) {\n        addMessage({\n          type: 'me',\n          text: res.message,\n          time: dayjs('2020-01-01 ' + res.time)\n        });\n        setMessage('');\n      } else {\n        alert(res.reason);\n      }\n    });\n    getSocket().removeAllListeners(\"messageReceived\");\n    getSocket().on('messageReceived', res => {\n      addMessage({\n        type: 'other',\n        text: res.message,\n        time: dayjs('2020-01-01 ' + res.time)\n      });\n    });\n  }, []);\n  return _jsxDEV(\"div\", {\n    css: chatStyle,\n    children: [_jsxDEV(\"div\", {\n      css: css`height: 25px; display: flex; flex-direction: row-reverse; justify-content: center; padding-bottom: 3px;`,\n      children: isInRoom ? _jsxDEV(Button, {\n        variant: \"contained\",\n        sx: leaveButtonStyle,\n        onClick: leaveHandler,\n        children: isHost ? '방 삭제' : '방 퇴장'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this) : _jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), _jsxDEV(ChatView, {\n      chatList: chatList,\n      setChatList: setChatList,\n      chatStyleRef: chatStyleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), _jsxDEV(\"form\", {\n      css: css`display:flex;height:30px;`,\n      onSubmit: chatHandler,\n      children: [_jsxDEV(TextField, {\n        autoComplete: \"off\",\n        sx: textFieldStyle,\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        variant: \"contained\",\n        sx: sendButtonStyle,\n        onClick: chatHandler,\n        children: \"\\uBCF4\\uB0B4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["css","Button","TextField","ChatView","getSocket","useEffect","useRef","useState","dayjs","chatStyle","textFieldStyle","flexGrow","padding","fontSize","height","borderColor","sendButtonStyle","boxShadow","backgroundColor","width","minWidth","leaveButtonStyle","checkMessage","m","Chat","remake","setRemake","isInRoom","setIsInRoom","isHost","setIsHost","roomId","setRoomId","chatList","setChatList","addMessage","setRoomList","chatStyleRef","message","setMessage","chatHandler","e","preventDefault","emit","time","format","leaveHandler","removeAllListeners","on","res","ok","type","text","alert","reason","target","value"],"sources":["/var/www/front-end/src/main/chat/Chat.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, TextField } from '@mui/material';\nimport ChatView from './ChatView';\nimport { getSocket } from '../../socket/socket'\nimport { useEffect, useRef, useState } from 'react';\nimport dayjs from 'dayjs';\n\nconst chatStyle = css`\n  height: calc(100% - 8px);\n  margin: 3px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst textFieldStyle = {\n  flexGrow: '1',\n  '.MuiOutlinedInput-root input': {\n    padding: \"5px;\",\n    fontSize: '0.8em',\n    height: '20px',\n  },\n  '.MuiOutlinedInput-root fieldset': {\n    borderColor: 'green',\n  },\n  '.MuiOutlinedInput-root.Mui-focused fieldset': {\n    borderColor: 'green',\n  }\n};\n\nconst sendButtonStyle = {\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#2BAE66\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\"\n  }\n};\n\nconst leaveButtonStyle = {\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#ff5b5b\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#ff5b5b\"\n  }\n};\n\nconst checkMessage = (m) => {\n  if (m === '')\n    return false;\n  return true;\n}\n\nfunction Chat({ remake, setRemake, isInRoom, setIsInRoom, isHost, setIsHost, roomId, setRoomId, chatList, setChatList, addMessage, setRoomList, chatStyleRef }) {\n  const [message, setMessage] = useState('');\n\n  const chatHandler = (e) => {\n    e.preventDefault();\n    if (!isInRoom)\n      return;\n\n    if (checkMessage(message))\n      getSocket().emit('sendMessageReq', { message: message, time: dayjs().format('HH:mm:ss') });\n  }\n\n  const leaveHandler = (e) => {\n    if (!isInRoom)\n      return;\n    if (isHost)\n      getSocket().emit('deleteRoomReq');\n    else\n      getSocket().emit('quitRoomReq');\n  }\n\n  useEffect(() => {\n    getSocket().removeAllListeners(\"sendMessageRes\");\n    getSocket().on('sendMessageRes', (res) => {\n      if (res.ok) {\n        addMessage({ type: 'me', text: res.message, time: dayjs('2020-01-01 ' + res.time) });\n        setMessage('');\n      } else {\n        alert(res.reason)\n      }\n    })\n    getSocket().removeAllListeners(\"messageReceived\");\n    getSocket().on('messageReceived', (res) => {\n      addMessage({ type: 'other', text: res.message, time: dayjs('2020-01-01 ' + res.time) });\n    })\n  }, [])\n\n  return (\n    <div css={chatStyle}>\n      <div css={css`height: 25px; display: flex; flex-direction: row-reverse; justify-content: center; padding-bottom: 3px;`}>\n        {isInRoom\n          ? <Button variant=\"contained\" sx={leaveButtonStyle} onClick={leaveHandler}>{isHost ? '방 삭제' : '방 퇴장'}</Button>\n          : <></>}\n      </div>\n      <ChatView chatList={chatList} setChatList={setChatList} chatStyleRef={chatStyleRef} />\n      <form css={css`display:flex;height:30px;`} onSubmit={chatHandler}>\n        <TextField autoComplete='off' sx={textFieldStyle} value={message} onChange={(e) => setMessage(e.target.value)} />\n        <Button variant=\"contained\" sx={sendButtonStyle} onClick={chatHandler}>보내기</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module"}