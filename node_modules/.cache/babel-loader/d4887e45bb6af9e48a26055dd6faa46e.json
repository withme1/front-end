{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/room/EnterButton.js\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from '@mui/material/Button';\nimport { getSocket } from '../../socket/socket';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst buttonStyle = css`\n    border: 1px solid #FCF6F5;\n    color: #FCF6F5;\n    font-size: 15px;\n    \n    \n    &:hover {\n        color: #FCF6F5;\n    }\n`;\n\nfunction EnterButton(_ref) {\n  let {\n    roomId,\n    setRejoin,\n    enterId,\n    isInRoom,\n    isHost\n  } = _ref;\n\n  const clickHandler = e => {\n    e.preventDefault();\n\n    if (enterId === roomId) {\n      window.alert('이미 들어간 방입니다.');\n      return;\n    }\n\n    if (!isInRoom) {\n      getSocket().emit('joinRoomReq', enterId);\n      return;\n    }\n\n    let message;\n    if (isHost) message = '기존 방은 삭제하시겠습니까?';else message = '기존 방에서는 퇴장하시겠습니까?';\n\n    if (window.confirm(message)) {\n      if (isHost) {\n        getSocket().emit('deleteRoomReq');\n      } else {\n        getSocket().emit('quitRoomReq');\n      }\n\n      setRejoin(enterId);\n    }\n  };\n\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(Button, {\n      css: buttonStyle,\n      onClick: clickHandler,\n      children: \"\\uC785\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = EnterButton;\nexport default EnterButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterButton\");","map":{"version":3,"names":["css","Button","getSocket","buttonStyle","EnterButton","roomId","setRejoin","enterId","isInRoom","isHost","clickHandler","e","preventDefault","window","alert","emit","message","confirm"],"sources":["/var/www/front-end/src/main/room/EnterButton.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from '@mui/material/Button';\nimport { getSocket } from '../../socket/socket'\n\nconst buttonStyle = css`\n    border: 1px solid #FCF6F5;\n    color: #FCF6F5;\n    font-size: 15px;\n    \n    \n    &:hover {\n        color: #FCF6F5;\n    }\n`;\n\nfunction EnterButton({ roomId, setRejoin, enterId, isInRoom, isHost }) {\n  const clickHandler = (e) => {\n    e.preventDefault();\n    if (enterId === roomId) {\n      window.alert('이미 들어간 방입니다.');\n      return;\n    }\n    if (!isInRoom) {\n      getSocket().emit('joinRoomReq', enterId);\n      return;\n    }\n    let message;\n    if (isHost)\n      message = '기존 방은 삭제하시겠습니까?';\n    else\n      message = '기존 방에서는 퇴장하시겠습니까?';\n    if (window.confirm(message)) {\n      if (isHost) {\n        getSocket().emit('deleteRoomReq');\n      } else {\n        getSocket().emit('quitRoomReq')\n      }\n      setRejoin(enterId);\n    }\n  }\n\n  return (\n    <>\n      <Button css={buttonStyle} onClick={clickHandler}>입장</Button>\n    </>\n  )\n}\n\nexport default EnterButton"],"mappings":";;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;AAEA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,SAASI,WAAT,OAAuE;EAAA,IAAlD;IAAEC,MAAF;IAAUC,SAAV;IAAqBC,OAArB;IAA8BC,QAA9B;IAAwCC;EAAxC,CAAkD;;EACrE,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;;IACA,IAAIL,OAAO,KAAKF,MAAhB,EAAwB;MACtBQ,MAAM,CAACC,KAAP,CAAa,cAAb;MACA;IACD;;IACD,IAAI,CAACN,QAAL,EAAe;MACbN,SAAS,GAAGa,IAAZ,CAAiB,aAAjB,EAAgCR,OAAhC;MACA;IACD;;IACD,IAAIS,OAAJ;IACA,IAAIP,MAAJ,EACEO,OAAO,GAAG,iBAAV,CADF,KAGEA,OAAO,GAAG,mBAAV;;IACF,IAAIH,MAAM,CAACI,OAAP,CAAeD,OAAf,CAAJ,EAA6B;MAC3B,IAAIP,MAAJ,EAAY;QACVP,SAAS,GAAGa,IAAZ,CAAiB,eAAjB;MACD,CAFD,MAEO;QACLb,SAAS,GAAGa,IAAZ,CAAiB,aAAjB;MACD;;MACDT,SAAS,CAACC,OAAD,CAAT;IACD;EACF,CAvBD;;EAyBA,OACE;IAAA,UACE,QAAC,MAAD;MAAQ,GAAG,EAAEJ,WAAb;MAA0B,OAAO,EAAEO,YAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;KA/BQN,W;AAiCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}