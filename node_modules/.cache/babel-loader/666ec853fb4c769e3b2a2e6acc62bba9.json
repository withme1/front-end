{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/Main.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport ComputerChat from './chat/ComputerChat';\nimport MobileChat from './chat/MobileChat';\nimport RoomList from './room/RoomList';\nimport { getSocket } from '../socket/socket';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [roomList, setRoomList] = useState([]);\n  const [isInRoom, setIsInRoom] = useState(false);\n  const [isHost, setIsHost] = useState(false);\n  const [roomId, setRoomId] = useState(null);\n  const [chatList, setChatList] = useState([]);\n  const chatStyleRef = useRef();\n  const [remake, setRemake] = useState(false);\n  const [rejoin, setRejoin] = useState(null);\n  const [fullIds, setFullIds] = useState(new Set());\n\n  const addMessage = m => {\n    setChatList(prev => [...prev, m]);\n  };\n\n  const clearMessage = () => {\n    setChatList([]);\n  };\n\n  useEffect(() => {\n    if (chatStyleRef.current) chatStyleRef.current.scrollTop = chatStyleRef.current.scrollHeight;\n  }, [chatList]);\n  useEffect(() => {\n    getSocket().on('roomDeleted', id => {\n      setRoomList(prev => prev.filter(room => room.id !== id));\n    });\n  }, []);\n  useEffect(() => {\n    getSocket().removeAllListeners(\"roomDeletedC\");\n    getSocket().on('roomDeletedC', () => {\n      if (isInRoom && !isHost) {\n        addMessage({\n          type: 'system',\n          text: '방 삭제됨'\n        });\n        setIsInRoom(false);\n        setIsHost(false);\n        setRoomId(null);\n      }\n    });\n    getSocket().removeAllListeners(\"roomQuited\");\n    getSocket().on('roomQuited', () => {\n      if (isInRoom && isHost) {\n        addMessage({\n          type: 'system',\n          text: '상대 퇴장'\n        });\n        setIsInRoom(true);\n        setIsHost(true);\n        setRoomId(roomId);\n      }\n    });\n  }, [isInRoom]);\n  const isPC = useMediaQuery({\n    query: \"(min-width: 700px)\"\n  });\n  const mainStyle = css`\n        display: flex;\n        display-direction: ${isPC ? 'row' : 'column'};\n        align-items: stretch;\n    `;\n  return _jsxDEV(\"div\", {\n    className: \"main\",\n    css: mainStyle,\n    children: [isPC ? _jsxDEV(ComputerChat, {\n      roomList: roomList,\n      rejoin: rejoin,\n      setRejoin: setRejoin,\n      remake: remake,\n      setRemake: setRemake,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      chatList: chatList,\n      setChatList: setChatList,\n      addMessage: addMessage,\n      setRoomList: setRoomList,\n      chatStyleRef: chatStyleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this) : _jsxDEV(_Fragment, {}, void 0, false), _jsxDEV(RoomList, {\n      clearMessage: clearMessage,\n      fullIds: fullIds,\n      setFullIds: setFullIds,\n      rejoin: rejoin,\n      setRejoin: setRejoin,\n      remake: remake,\n      setRemake: setRemake,\n      roomList: roomList,\n      setRoomList: setRoomList,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      addMessage: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), isPC ? _jsxDEV(_Fragment, {}, void 0, false) : _jsxDEV(MobileChat, {\n      roomList: roomList,\n      rejoin: rejoin,\n      setRejoin: setRejoin,\n      remake: remake,\n      setRemake: setRemake,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      chatList: chatList,\n      setChatList: setChatList,\n      addMessage: addMessage,\n      setRoomList: setRoomList,\n      chatStyleRef: chatStyleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"ku4DoJPhcPirFgeEdQFGABc3/+A=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["css","useEffect","useRef","useState","ComputerChat","MobileChat","RoomList","getSocket","useMediaQuery","Main","roomList","setRoomList","isInRoom","setIsInRoom","isHost","setIsHost","roomId","setRoomId","chatList","setChatList","chatStyleRef","remake","setRemake","rejoin","setRejoin","fullIds","setFullIds","Set","addMessage","m","prev","clearMessage","current","scrollTop","scrollHeight","on","id","filter","room","removeAllListeners","type","text","isPC","query","mainStyle"],"sources":["/var/www/front-end/src/main/Main.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport ComputerChat from './chat/ComputerChat';\nimport MobileChat from './chat/MobileChat';\nimport RoomList from './room/RoomList';\nimport { getSocket } from '../socket/socket';\nimport { useMediaQuery } from 'react-responsive';\n\nfunction Main() {\n    const [roomList, setRoomList] = useState([]);\n    const [isInRoom, setIsInRoom] = useState(false);\n    const [isHost, setIsHost] = useState(false);\n    const [roomId, setRoomId] = useState(null);\n    const [chatList, setChatList] = useState([]);\n    const chatStyleRef = useRef();\n    const [remake, setRemake] = useState(false);\n    const [rejoin, setRejoin] = useState(null);\n    const [fullIds, setFullIds] = useState(new Set()); \n\n    const addMessage = (m) => {\n        setChatList((prev) => [...prev, m]);\n    }\n\n    const clearMessage = () => {\n        setChatList([]);\n    }\n\n    useEffect(() => {\n        if (chatStyleRef.current)\n            chatStyleRef.current.scrollTop = chatStyleRef.current.scrollHeight;\n    }, [chatList])\n\n    useEffect(() => {\n        getSocket().on('roomDeleted', (id) => {\n            setRoomList((prev) => (prev.filter((room) => room.id !== id)));\n        })\n    }, [])\n\n    useEffect(() => {\n        getSocket().removeAllListeners(\"roomDeletedC\");\n        getSocket().on('roomDeletedC', () => {\n            if (isInRoom && !isHost) {\n                addMessage({ type: 'system', text: '방 삭제됨' });\n                setIsInRoom(false);\n                setIsHost(false);\n                setRoomId(null);\n            }\n        })\n\n        getSocket().removeAllListeners(\"roomQuited\");\n        getSocket().on('roomQuited', () => {\n            if (isInRoom && isHost) {\n                addMessage({ type: 'system', text: '상대 퇴장' });\n                setIsInRoom(true);\n                setIsHost(true);\n                setRoomId(roomId);\n            }\n        })\n\n    }, [isInRoom])\n\n    const isPC = useMediaQuery({query : \"(min-width: 700px)\"});\n\n    const mainStyle = css`\n        display: flex;\n        display-direction: ${isPC ? 'row' : 'column'};\n        align-items: stretch;\n    `;\n\n    return (\n        <div className=\"main\" css={mainStyle}>\n            {isPC\n                ? <ComputerChat roomList={roomList} rejoin={rejoin} setRejoin={setRejoin} remake={remake} setRemake={setRemake} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} chatList={chatList} setChatList={setChatList} addMessage={addMessage} setRoomList={setRoomList} chatStyleRef={chatStyleRef} />\n                : <></>\n            }\n            <RoomList clearMessage={clearMessage} fullIds={fullIds} setFullIds={setFullIds} rejoin={rejoin} setRejoin={setRejoin} remake={remake} setRemake={setRemake} roomList={roomList} setRoomList={setRoomList} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} addMessage={addMessage} />\n            {isPC\n                ? <></>\n                : <MobileChat roomList={roomList} rejoin={rejoin} setRejoin={setRejoin} remake={remake} setRemake={setRemake} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} chatList={chatList} setChatList={setChatList} addMessage={addMessage} setRoomList={setRoomList} chatStyleRef={chatStyleRef} />\n            }\n        </div>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module"}