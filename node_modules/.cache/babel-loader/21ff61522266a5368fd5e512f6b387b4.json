{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/Main.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport dayjs from 'dayjs';\nimport { useEffect, useRef, useState } from 'react';\nimport ComputerChat from './chat/ComputerChat';\nimport MobileChat from './chat/MobileChat';\nimport RoomList from './room/RoomList';\nimport { getSocket } from '../socket/socket';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst mainStyle = css`\n    display: flex;\n    align-items: stretch;\n`;\n\nfunction Main() {\n  _s();\n\n  const [roomList, setRoomList] = useState([]);\n  const [isInRoom, setIsInRoom] = useState(false);\n  const [isHost, setIsHost] = useState(false);\n  const [roomId, setRoomId] = useState(null);\n  const [chatList, setChatList] = useState([{\n    type: 'system',\n    text: '상대 입장',\n    time: dayjs()\n  }, {\n    type: 'other',\n    text: 'hihi',\n    time: dayjs()\n  }, {\n    type: 'me',\n    text: 'hihdddddddddddddddddddddddddddddddddddddddddi',\n    time: dayjs()\n  }, {\n    type: 'me',\n    text: 'hhiihi',\n    time: dayjs()\n  }]);\n  const chatStyleRef = useRef();\n  const [remake, setRemake] = useState(true);\n\n  const addMessage = m => {\n    setChatList(prev => [...prev, m]);\n  };\n\n  useEffect(() => {\n    getSocket().removeAllListeners(\"roomDeleted\");\n    getSocket().on('roomDeleted', id => {\n      setRoomList(prev => prev.filter(room => room.id !== id));\n\n      if (isInRoom) {\n        addMessage({\n          type: 'system',\n          text: '방 삭제됨'\n        });\n        setIsInRoom(false);\n        setIsHost(false);\n        setRoomId(null);\n      }\n    });\n    getSocket().removeAllListeners(\"roomQuited\");\n    getSocket().on('roomQuited', () => {\n      if (isInRoom && isHost) {\n        addMessage({\n          type: 'system',\n          text: '상대 퇴장'\n        });\n        setIsInRoom(true);\n        setIsHost(true);\n        setRoomId(roomId);\n      }\n    });\n  }, [isInRoom]);\n  useEffect(() => {\n    getSocket().on('deleteRoomRes', res => {\n      if (res.ok) {\n        if (remake) {\n          getSocket().emit('createRooomReq', {\n            SrcText: start,\n            DestText: end,\n            SrcLatitude: startLoc.latitude,\n            SrcLongitude: startLoc.longitude,\n            DestLatitude: endLoc.latitude,\n            DestLongitude: endLoc.longitude,\n            date: startDay.format('YYYY-MM-DD'),\n            time: startTime.format('HH:mm:ss')\n          });\n          setRemake(false);\n        }\n\n        setRoomList(prev => prev.filter(room => room.id !== res.id));\n        addMessage({\n          type: 'system',\n          text: '방 삭제'\n        });\n        setIsInRoom(false);\n        setIsHost(false);\n        setRoomId(null);\n      } else {\n        alert(res.reason);\n      }\n    });\n  }, []);\n  return _jsxDEV(\"div\", {\n    className: \"main\",\n    css: mainStyle,\n    children: [_jsxDEV(MobileChat, {\n      remake: remake,\n      setRemake: setRemake,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      chatList: chatList,\n      setChatList: setChatList,\n      addMessage: addMessage,\n      setRoomList: setRoomList,\n      chatStyleRef: chatStyleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), _jsxDEV(ComputerChat, {\n      remake: remake,\n      setRemake: setRemake,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      chatList: chatList,\n      setChatList: setChatList,\n      addMessage: addMessage,\n      setRoomList: setRoomList,\n      chatStyleRef: chatStyleRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), _jsxDEV(RoomList, {\n      remake: remake,\n      setRemake: setRemake,\n      roomList: roomList,\n      setRoomList: setRoomList,\n      isInRoom: isInRoom,\n      setIsInRoom: setIsInRoom,\n      isHost: isHost,\n      setIsHost: setIsHost,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      addMessage: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"l/M/oSmQKK75s8+vOrWbwl6EckQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["css","dayjs","useEffect","useRef","useState","ComputerChat","MobileChat","RoomList","getSocket","mainStyle","Main","roomList","setRoomList","isInRoom","setIsInRoom","isHost","setIsHost","roomId","setRoomId","chatList","setChatList","type","text","time","chatStyleRef","remake","setRemake","addMessage","m","prev","removeAllListeners","on","id","filter","room","res","ok","emit","SrcText","start","DestText","end","SrcLatitude","startLoc","latitude","SrcLongitude","longitude","DestLatitude","endLoc","DestLongitude","date","startDay","format","startTime","alert","reason"],"sources":["/var/www/front-end/src/main/Main.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport dayjs from 'dayjs';\nimport { useEffect, useRef, useState } from 'react';\nimport ComputerChat from './chat/ComputerChat';\nimport MobileChat from './chat/MobileChat';\nimport RoomList from './room/RoomList';\nimport { getSocket } from '../socket/socket';\n\nconst mainStyle = css`\n    display: flex;\n    align-items: stretch;\n`;\n\nfunction Main() {\n    const [roomList, setRoomList] = useState([]);\n    const [isInRoom, setIsInRoom] = useState(false);\n    const [isHost, setIsHost] = useState(false);\n    const [roomId, setRoomId] = useState(null);\n    const [chatList, setChatList] = useState([\n        { type: 'system', text: '상대 입장', time: dayjs() },\n        { type: 'other', text: 'hihi', time: dayjs() },\n        { type: 'me', text: 'hihdddddddddddddddddddddddddddddddddddddddddi', time: dayjs() },\n        { type: 'me', text: 'hhiihi', time: dayjs() }]);\n    const chatStyleRef = useRef();\n    const [remake, setRemake] = useState(true);\n\n    const addMessage = (m) => {\n        setChatList((prev) => [...prev, m]);\n    }\n\n    useEffect(() => {\n        getSocket().removeAllListeners(\"roomDeleted\");\n        getSocket().on('roomDeleted', (id) => {\n            setRoomList((prev) => (prev.filter((room) => room.id !== id)));\n            if (isInRoom) {\n                addMessage({ type: 'system', text: '방 삭제됨' });\n                setIsInRoom(false);\n                setIsHost(false);\n                setRoomId(null);\n            }\n        })\n\n        getSocket().removeAllListeners(\"roomQuited\");\n        getSocket().on('roomQuited', () => {\n            if (isInRoom && isHost) {\n                addMessage({ type: 'system', text: '상대 퇴장' });\n                setIsInRoom(true);\n                setIsHost(true);\n                setRoomId(roomId);\n            }\n        })\n\n    }, [isInRoom])\n\n    useEffect(() => {\n        getSocket().on('deleteRoomRes', (res) => {\n            if (res.ok) {\n                if(remake) {\n                    getSocket().emit('createRooomReq', {\n                        SrcText: start,\n                        DestText: end,\n                        SrcLatitude: startLoc.latitude,\n                        SrcLongitude: startLoc.longitude,\n                        DestLatitude: endLoc.latitude,\n                        DestLongitude: endLoc.longitude,\n                        date: startDay.format('YYYY-MM-DD'),\n                        time: startTime.format('HH:mm:ss')\n                    })\n                    setRemake(false);\n                }\n                setRoomList((prev) => (prev.filter((room) => room.id !== res.id)));\n                addMessage({ type: 'system', text: '방 삭제' });\n                setIsInRoom(false);\n                setIsHost(false);\n                setRoomId(null);\n            } else {\n                alert(res.reason)\n            }\n        })\n    }, [])\n\n    return (\n        <div className=\"main\" css={mainStyle}>\n            <MobileChat remake={remake} setRemake={setRemake} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} chatList={chatList} setChatList={setChatList} addMessage={addMessage} setRoomList={setRoomList} chatStyleRef={chatStyleRef} />\n            <ComputerChat remake={remake} setRemake={setRemake} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} chatList={chatList} setChatList={setChatList} addMessage={addMessage} setRoomList={setRoomList} chatStyleRef={chatStyleRef} />\n            <RoomList remake={remake} setRemake={setRemake} roomList={roomList} setRoomList={setRoomList} isInRoom={isInRoom} setIsInRoom={setIsInRoom} isHost={isHost} setIsHost={setIsHost} roomId={roomId} setRoomId={setRoomId} addMessage={addMessage} />\n        </div>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module"}