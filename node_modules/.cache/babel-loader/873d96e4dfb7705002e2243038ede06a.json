{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/room/ModalText.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useRef } from \"react\";\nimport Modal from \"react-modal/lib/components/Modal\";\nimport { getDistance } from '../util/getDistance';\nimport { getLevelByDisance } from '../util/getLevelByDistance';\nimport { getMiddleLoc } from '../util/getMiddleLoc';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst modalStyle = {\n  overlay: {\n    zIndex: 2000\n  },\n  content: {\n    top: '10vh',\n    left: '10vw',\n    right: '10vw',\n    bottom: '10vh'\n  }\n};\nconst mapStyle = css`\n    height: 100%\n`;\nconst clickStyle = css`\n    color: #FCF6F5;\n    text-decoration: none;\n    &:visited {\n        color: #FCF6F5;\n    }\n`;\n\nfunction ModalText(_ref) {\n  _s();\n\n  let {\n    open,\n    setOpen,\n    start,\n    startLoc,\n    end,\n    endLoc\n  } = _ref;\n  const mapRef = useRef(null); // const clickHandler = (e) => {\n  //     e.preventDefault();\n  //     setOpen(true);\n  //     waitModalRender(() => {\n  //         const middleLoc = getMiddleLoc(startLoc, endLoc);\n  //         const options = { //지도를 생성할 때 필요한 기본 옵션\n  //             center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude), //지도의 중심좌표.\n  //             level: getLevelByDisance(getDistance(startLoc.latitude, startLoc.longitude, endLoc.latitude, endLoc.longitude)*1000) //지도의 레벨(확대, 축소 정도)\n  //         };\n  //         const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n  //         //마커 생성\n  //         const startMarker = new kakao.maps.Marker({\n  //             position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n  //         });\n  //         startMarker.setMap(map);\n  //         const startCustomOverlay = new kakao.maps.CustomOverlay({\n  //             map: map,\n  //             position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n  //             content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n  //         });\n  //         //마커 생성\n  //         const endMarker = new kakao.maps.Marker({\n  //             position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n  //         });\n  //         endMarker.setMap(map);\n  //         const customOverlay = new kakao.maps.CustomOverlay({\n  //             map: map,\n  //             position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n  //             content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n  //         });\n  //     })\n  // }\n\n  const waitModalRender = cb => {\n    if (mapRef.current === null) setTimeout(() => waitModalRender(cb), 0);else cb();\n  };\n\n  console.log(open);\n\n  if (open) {\n    waitModalRender(() => {\n      const middleLoc = getMiddleLoc(startLoc, endLoc);\n      const options = {\n        //지도를 생성할 때 필요한 기본 옵션\n        center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude),\n        //지도의 중심좌표.\n        level: getLevelByDisance(getDistance(startLoc.latitude, startLoc.longitude, endLoc.latitude, endLoc.longitude) * 1000) //지도의 레벨(확대, 축소 정도)\n\n      };\n      const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n      //마커 생성\n\n      const startMarker = new kakao.maps.Marker({\n        position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n      });\n      startMarker.setMap(map);\n      const startCustomOverlay = new kakao.maps.CustomOverlay({\n        map: map,\n        position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n        content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`\n      }); //마커 생성\n\n      const endMarker = new kakao.maps.Marker({\n        position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n      });\n      endMarker.setMap(map);\n      const customOverlay = new kakao.maps.CustomOverlay({\n        map: map,\n        position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n        content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`\n      });\n    });\n  }\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"div\", {\n      css: clickStyle,\n      children: `${start} → ${end}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), _jsxDEV(Modal, {\n      style: modalStyle,\n      isOpen: open,\n      onRequestClose: () => setOpen(false),\n      ariaHideApp: false,\n      children: _jsxDEV(\"div\", {\n        ref: mapRef,\n        css: mapStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalText, \"eZwvXZNGrOinO8i65lLhOza0GRY=\");\n\n_c = ModalText;\nexport default ModalText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalText\");","map":{"version":3,"names":["css","useState","useRef","Modal","getDistance","getLevelByDisance","getMiddleLoc","modalStyle","overlay","zIndex","content","top","left","right","bottom","mapStyle","clickStyle","ModalText","open","setOpen","start","startLoc","end","endLoc","mapRef","waitModalRender","cb","current","setTimeout","console","log","middleLoc","options","center","kakao","maps","LatLng","latitude","longitude","level","map","Map","startMarker","Marker","position","setMap","startCustomOverlay","CustomOverlay","endMarker","customOverlay"],"sources":["/var/www/front-end/src/main/room/ModalText.js"],"sourcesContent":["/*global kakao*/\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useState, useRef } from \"react\";\nimport Modal from \"react-modal/lib/components/Modal\"\nimport { getDistance } from '../util/getDistance';\nimport { getLevelByDisance } from '../util/getLevelByDistance';\nimport { getMiddleLoc } from '../util/getMiddleLoc';\n\nconst modalStyle = {\n    overlay: {\n        zIndex: 2000\n    },\n    content: {\n        top: '10vh',\n        left: '10vw',\n        right: '10vw',\n        bottom: '10vh'\n      }\n};\n\nconst mapStyle = css`\n    height: 100%\n`;\n\nconst clickStyle = css`\n    color: #FCF6F5;\n    text-decoration: none;\n    &:visited {\n        color: #FCF6F5;\n    }\n`;\n\nfunction ModalText({ open, setOpen, start, startLoc, end, endLoc }) {\n    const mapRef = useRef(null);\n\n    // const clickHandler = (e) => {\n    //     e.preventDefault();\n    //     setOpen(true);\n    //     waitModalRender(() => {\n    //         const middleLoc = getMiddleLoc(startLoc, endLoc);\n    //         const options = { //지도를 생성할 때 필요한 기본 옵션\n    //             center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude), //지도의 중심좌표.\n    //             level: getLevelByDisance(getDistance(startLoc.latitude, startLoc.longitude, endLoc.latitude, endLoc.longitude)*1000) //지도의 레벨(확대, 축소 정도)\n    //         };\n\n    //         const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n\n    //         //마커 생성\n    //         const startMarker = new kakao.maps.Marker({\n    //             position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n    //         });\n    //         startMarker.setMap(map);\n\n    //         const startCustomOverlay = new kakao.maps.CustomOverlay({\n    //             map: map,\n    //             position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n    //             content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n    //         });\n\n    //         //마커 생성\n    //         const endMarker = new kakao.maps.Marker({\n    //             position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n    //         });\n    //         endMarker.setMap(map);\n\n    //         const customOverlay = new kakao.maps.CustomOverlay({\n    //             map: map,\n    //             position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n    //             content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n    //         });\n    //     })\n    // }\n\n    const waitModalRender = (cb) => {\n        if (mapRef.current === null)\n            setTimeout(() => waitModalRender(cb), 0);\n        else\n            cb();\n    }\n    console.log(open)\n    if (open) {\n        waitModalRender(() => {\n            const middleLoc = getMiddleLoc(startLoc, endLoc);\n            const options = { //지도를 생성할 때 필요한 기본 옵션\n                center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude), //지도의 중심좌표.\n                level: getLevelByDisance(getDistance(startLoc.latitude, startLoc.longitude, endLoc.latitude, endLoc.longitude)*1000) //지도의 레벨(확대, 축소 정도)\n            };\n\n            const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n\n            //마커 생성\n            const startMarker = new kakao.maps.Marker({\n                position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n            });\n            startMarker.setMap(map);\n\n            const startCustomOverlay = new kakao.maps.CustomOverlay({\n                map: map,\n                position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n                content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n            });\n\n            //마커 생성\n            const endMarker = new kakao.maps.Marker({\n                position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n            });\n            endMarker.setMap(map);\n\n            const customOverlay = new kakao.maps.CustomOverlay({\n                map: map,\n                position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n                content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${start}</div>`,\n            });\n        })\n    }\n\n    return (\n        <>\n            <div css={clickStyle}>\n                {`${start} → ${end}`}\n            </div>\n            <Modal\n                style={modalStyle}\n                isOpen={open}\n                onRequestClose={() => setOpen(false)}\n                ariaHideApp={false}\n            >\n                <div ref={mapRef} css={mapStyle}>\n                    \n                </div>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ModalText"],"mappings":"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"},"metadata":{},"sourceType":"module"}