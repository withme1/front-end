{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/chat/ChatMapInfo.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport Modal from 'react-modal/lib/components/Modal';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst mapButtonSytle = {\n  color: 'white',\n  boxShadow: \"0 0 0\",\n  backgroundColor: \"#2BAE66\",\n  padding: \"0px\",\n  fontSize: '0.8em',\n  width: '55px',\n  minWidth: '55px',\n  \"&:hover\": {\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\"\n  }\n};\n\nfunction ChatMapInfo(_ref) {\n  _s();\n\n  let {\n    room\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const mapRef = useRef(null);\n\n  const waitModalRender = cb => {\n    if (mapRef.current === null) setTimeout(() => waitModalRender(cb), 0);else cb();\n  };\n\n  const clickHandler = e => {\n    setOpen(true);\n    waitModalRender(() => {\n      const startLoc = room.startLoc;\n      const endLoc = room.endLoc;\n      const middleLoc = getMiddle(startLoc, endLoc);\n      const options = {\n        //지도를 생성할 때 필요한 기본 옵션\n        center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude),\n        //지도의 중심좌표.\n        level: 3 //지도의 레벨(확대, 축소 정도)\n\n      };\n      const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n      //마커 생성\n\n      const startMarker = new kakao.maps.Marker({\n        position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n      });\n      startMarker.setMap(map);\n      const startCustomOverlay = new kakao.maps.CustomOverlay({\n        map: map,\n        position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n        content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${room.start}</div>`\n      }); //마커 생성\n\n      const endMarker = new kakao.maps.Marker({\n        position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n      });\n      endMarker.setMap(map);\n      const endCustomOverlay = new kakao.maps.CustomOverlay({\n        map: map,\n        position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n        content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">도착: ${room.end}</div>`\n      });\n    });\n  };\n\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Button, {\n      sx: mapButtonSytle,\n      onClick: clickHandler,\n      children: \"\\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), _jsxDEV(Modal, {\n      style: {\n        overlay: {\n          zIndex: 2000\n        }\n      },\n      isOpen: open,\n      onRequestClose: () => setOpen(false),\n      ariaHideApp: false,\n      children: _jsxDEV(\"div\", {\n        ref: mapRef,\n        css: css`height: 100%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatMapInfo, \"5drilctw5vHsTqFtARh01N6lBc8=\");\n\n_c = ChatMapInfo;\nexport default ChatMapInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMapInfo\");","map":{"version":3,"names":["css","Button","useEffect","useRef","useState","Modal","mapButtonSytle","color","boxShadow","backgroundColor","padding","fontSize","width","minWidth","ChatMapInfo","room","open","setOpen","mapRef","waitModalRender","cb","current","setTimeout","clickHandler","e","startLoc","endLoc","middleLoc","getMiddle","options","center","kakao","maps","LatLng","latitude","longitude","level","map","Map","startMarker","Marker","position","setMap","startCustomOverlay","CustomOverlay","content","start","endMarker","endCustomOverlay","end","overlay","zIndex"],"sources":["/var/www/front-end/src/main/chat/ChatMapInfo.js"],"sourcesContent":["/*global kakao*/\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport Modal from 'react-modal/lib/components/Modal';\n\nconst mapButtonSytle = {\n    color: 'white',\n    boxShadow: \"0 0 0\",\n    backgroundColor: \"#2BAE66\",\n    padding: \"0px\",\n    fontSize: '0.8em',\n    width: '55px',\n    minWidth: '55px',\n\n    \"&:hover\": {\n        boxShadow: \"0 0 0\",\n        backgroundColor: \"#2BAE66\"\n    }\n};\n\nfunction ChatMapInfo({ room }) {\n    const [open, setOpen] = useState(false);\n    const mapRef = useRef(null);\n\n    const waitModalRender = (cb) => {\n        if (mapRef.current === null)\n            setTimeout(() => waitModalRender(cb), 0);\n        else\n            cb();\n    }\n\n    const clickHandler = (e) => {\n        setOpen(true);\n        \n        waitModalRender(() => {\n            const startLoc = room.startLoc;\n            const endLoc = room.endLoc;\n            const middleLoc = getMiddle(startLoc, endLoc);\n            const options = { //지도를 생성할 때 필요한 기본 옵션\n                center: new kakao.maps.LatLng(middleLoc.latitude, middleLoc.longitude), //지도의 중심좌표.\n                level: 3 //지도의 레벨(확대, 축소 정도)\n            };\n\n            const map = new kakao.maps.Map(mapRef.current, options); //지도 생성 및 객체 리턴\n\n            //마커 생성\n            const startMarker = new kakao.maps.Marker({\n                position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude)\n            });\n            startMarker.setMap(map);\n\n            const startCustomOverlay = new kakao.maps.CustomOverlay({\n                map: map,\n                position: new kakao.maps.LatLng(startLoc.latitude, startLoc.longitude),\n                content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">출발: ${room.start}</div>`,\n            });\n\n            //마커 생성\n            const endMarker = new kakao.maps.Marker({\n                position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude)\n            });\n            endMarker.setMap(map);\n\n            const endCustomOverlay = new kakao.maps.CustomOverlay({\n                map: map,\n                position: new kakao.maps.LatLng(endLoc.latitude, endLoc.longitude),\n                content: `<div style=\"padding:3px;position: relative;bottom:55px;color:black;background-color:white;border-radius:5px;border:1px solid black\">도착: ${room.end}</div>`,\n            });\n        })\n    }\n\n    return (\n        <>\n            <Button sx={mapButtonSytle} onClick={clickHandler}>위치</Button>\n            <Modal\n                style={{overlay: {zIndex: 2000}}}\n                isOpen={open}\n                onRequestClose={() => setOpen(false)}\n                ariaHideApp={false}\n            >\n                <div ref={mapRef} css={css`height: 100%`}></div>\n            </Modal>\n        </>\n    )\n}\n\nexport default ChatMapInfo"],"mappings":"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"},"metadata":{},"sourceType":"module"}