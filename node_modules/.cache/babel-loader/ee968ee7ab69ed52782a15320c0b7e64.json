{"ast":null,"code":"var _jsxFileName = \"/var/www/front-end/src/main/chat/ChatView.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport MyChat from './type/MyChat';\nimport OtherChat from './type/OtherChat';\nimport SystemChat from './type/SystemChat';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst viewStyle = css`\n  flex-grow: 1;\n  border: 1px solid #2BAE66;\n  border-radius: 5px;\n  overflow-y: scroll;\n  \n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction ChatView() {\n  _s();\n\n  const [chatList, setChatList] = useState([{\n    type: 'system',\n    text: '상대 입장',\n    time: dayjs()\n  }, {\n    type: 'other',\n    text: 'hihi',\n    time: dayjs()\n  }, {\n    type: 'me',\n    text: 'hihdddddddddddddddddddddddddddddddddddddddddi',\n    time: dayjs()\n  }, {\n    type: 'me',\n    text: 'hhiihi',\n    time: dayjs()\n  }]);\n  return _jsxDEV(\"div\", {\n    css: viewStyle,\n    children: chatList.map((chat, i) => {\n      if (chat.type === 'me') return _jsxDEV(MyChat, {\n        text: chat.text,\n        time: chat.time\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this);else if (chat.type === 'other') return _jsxDEV(OtherChat, {\n        text: chat.text,\n        time: chat.time\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }, this);else if (chat.type === 'system') return _jsxDEV(SystemChat, {\n        text: chat.text,\n        time: chat.time\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n      return null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatView, \"0wU5e9i5oikt6P/4fnZLiWDaa4w=\");\n\n_c = ChatView;\nexport default ChatView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["css","dayjs","useState","MyChat","OtherChat","SystemChat","viewStyle","ChatView","chatList","setChatList","type","text","time","map","chat","i"],"sources":["/var/www/front-end/src/main/chat/ChatView.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport MyChat from './type/MyChat';\nimport OtherChat from './type/OtherChat';\nimport SystemChat from './type/SystemChat';\n\n\nconst viewStyle = css`\n  flex-grow: 1;\n  border: 1px solid #2BAE66;\n  border-radius: 5px;\n  overflow-y: scroll;\n  \n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction ChatView() {\n    const [chatList, setChatList] = useState([\n        { type: 'system', text: '상대 입장', time: dayjs() },\n        { type: 'other', text: 'hihi', time: dayjs() },\n        { type: 'me', text: 'hihdddddddddddddddddddddddddddddddddddddddddi', time: dayjs() },\n        { type: 'me', text: 'hhiihi', time: dayjs() }]);\n    return (\n        <div css={viewStyle}>\n            {chatList.map((chat, i) => {\n                if (chat.type === 'me')\n                    return <MyChat text={chat.text} time={chat.time} key={i} />\n                else if (chat.type === 'other')\n                    return <OtherChat text={chat.text} time={chat.time} key={i} />\n                else if (chat.type === 'system')\n                    return <SystemChat text={chat.text} time={chat.time} key={i} />\n                return null;\n            })}\n        </div>\n    )\n}\n\nexport default ChatView"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAGA,MAAMC,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,SAASO,QAAT,GAAoB;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CACrC;IAAEQ,IAAI,EAAE,QAAR;IAAkBC,IAAI,EAAE,OAAxB;IAAiCC,IAAI,EAAEX,KAAK;EAA5C,CADqC,EAErC;IAAES,IAAI,EAAE,OAAR;IAAiBC,IAAI,EAAE,MAAvB;IAA+BC,IAAI,EAAEX,KAAK;EAA1C,CAFqC,EAGrC;IAAES,IAAI,EAAE,IAAR;IAAcC,IAAI,EAAE,+CAApB;IAAqEC,IAAI,EAAEX,KAAK;EAAhF,CAHqC,EAIrC;IAAES,IAAI,EAAE,IAAR;IAAcC,IAAI,EAAE,QAApB;IAA8BC,IAAI,EAAEX,KAAK;EAAzC,CAJqC,CAAD,CAAxC;EAKA,OACI;IAAK,GAAG,EAAEK,SAAV;IAAA,UACKE,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;MACvB,IAAID,IAAI,CAACJ,IAAL,KAAc,IAAlB,EACI,OAAO,QAAC,MAAD;QAAQ,IAAI,EAAEI,IAAI,CAACH,IAAnB;QAAyB,IAAI,EAAEG,IAAI,CAACF;MAApC,GAA+CG,CAA/C;QAAA;QAAA;QAAA;MAAA,QAAP,CADJ,KAEK,IAAID,IAAI,CAACJ,IAAL,KAAc,OAAlB,EACD,OAAO,QAAC,SAAD;QAAW,IAAI,EAAEI,IAAI,CAACH,IAAtB;QAA4B,IAAI,EAAEG,IAAI,CAACF;MAAvC,GAAkDG,CAAlD;QAAA;QAAA;QAAA;MAAA,QAAP,CADC,KAEA,IAAID,IAAI,CAACJ,IAAL,KAAc,QAAlB,EACD,OAAO,QAAC,UAAD;QAAY,IAAI,EAAEI,IAAI,CAACH,IAAvB;QAA6B,IAAI,EAAEG,IAAI,CAACF;MAAxC,GAAmDG,CAAnD;QAAA;QAAA;QAAA;MAAA,QAAP;MACJ,OAAO,IAAP;IACH,CARA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GAnBQR,Q;;KAAAA,Q;AAqBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}